{"version":3,"file":"static/js/9187.b7f5a007.chunk.js","mappings":"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","sources":["components/Paging.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Paging extends Component {\n  constructor(props) {\n    super();\n    const {\n      totalRecords = null,\n      pageLimit = 30,\n      pageNeighbours = 0,\n      sizing = \"\",\n      alignment = \"\",\n    } = props;\n    this.sizing = typeof sizing === \"string\" ? sizing : \"\";\n    this.alignment = typeof alignment === \"string\" ? alignment : \"\";\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = (page) => {\n    const { onPageChanged = (f) => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords,\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <nav aria-label=\"Page navigation\">\n        <ul className={`pagination ${this.sizing} ${this.alignment}`}>\n          {pages.map((page, index) => {\n            if (page === LEFT_PAGE)\n              return (\n                <li key={index} className=\"page-item\">\n                  <button\n                    className=\"page-link\"\n                    aria-label=\"Previous\"\n                    onClick={this.handleMoveLeft}\n                  >\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </button>\n                </li>\n              );\n\n            if (page === RIGHT_PAGE)\n              return (\n                <li key={index} className=\"page-item\">\n                  <a\n                    className=\"page-link\"\n                    href=\"#!\"\n                    aria-label=\"Next\"\n                    onClick={this.handleMoveRight}\n                  >\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n            return (\n              <li\n                key={index}\n                className={`page-item${currentPage === page ? \" active\" : \"\"}`}\n              >\n                <a\n                  className=\"page-link\"\n                  href=\"#!\"\n                  onClick={(e) => this.handleClick(page, e)}\n                >\n                  {page}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nPaging.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func,\n  sizing: PropTypes.string,\n};\n\nexport default Paging;\n"],"names":["LEFT_PAGE","RIGHT_PAGE","range","from","to","step","arguments","length","undefined","i","push","Paging","Component","constructor","props","super","gotoPage","page","onPageChanged","f","this","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","sizing","alignment","ceil","componentDidMount","render","_jsx","children","className","map","index","_jsxs","onClick","href","e"],"sourceRoot":""}